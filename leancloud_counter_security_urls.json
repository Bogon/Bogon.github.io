[{"title":"Hello World","url":"/hello-world/"},{"title":"Advanced Swift系列(一): Swift 简介","url":"/Advanced Swift系列(一): Swift 简介/"},{"title":"Advanced Swift系列(三):  Optionals","url":"/Advanced Swift系列(三):  Optionals/"},{"title":"Advanced Swift系列(九): Protocols","url":"/Advanced Swift系列(九): Protocols/"},{"title":"Advanced Swift系列(二): Build-in Collections","url":"/Advanced Swift系列(二): Build-in Collections/"},{"title":"Advanced Swift系列(八): Generics","url":"/Advanced Swift系列(八): Generics/"},{"title":"Advanced Swift系列(五): Structs and Classes","url":"/Advanced Swift系列(五): Structs and Classes/"},{"title":"Advanced Swift系列(十一): Error Handling","url":"/Advanced Swift系列(十一): Error Handling/"},{"title":"Functional Swift 初探","url":"/Functional Swift 初探/"},{"title":"NSCODER和SWIFT初始化","url":"/NSCODER和SWIFT初始化/"},{"title":"Swift 5使用UIImagePickerController拾取图像","url":"/Swift 5使用UIImagePickerController拾取图像/"},{"title":"Swift CompactMap vs flatMap：差异说明","url":"/Swift CompactMap vs flatMap：差异说明/"},{"title":"Swift Promises 初体验","url":"/Swift Promises 初体验/"},{"title":"Swift Lazy属性初始化","url":"/Swift Lazy属性初始化/"},{"title":"Swift Grand Central Dispatch 深入实践","url":"/Swift Grand Central Dispatch 深入实践/"},{"title":"Swift Promises 探究","url":"/Swift Promises 探究/"},{"title":"Swift UICollectionView使用指南","url":"/Swift UICollectionView使用指南/"},{"title":"Swift URLSession 和 Combine framework","url":"/Swift URLSession 和 Combine framework/"},{"title":"Swift 用 compactMap 替换 flatMap","url":"/Swift 用 compactMap 替换 flatMap/"},{"title":"Swift 选择和播放视频","url":"/Swift 选择和播放视频/"},{"title":"Swift 唯一识别的视图","url":"/Swift 唯一识别的视图/"},{"title":"Swift 如何学习现代UIKit？","url":"/Swift 如何学习现代UIKit？/"},{"title":"Swift中UIColor最佳实践","url":"/Swift中UIColor最佳实践/"},{"title":"Swift中构造函数与静态工厂方法的比较","url":"/Swift中构造函数与静态工厂方法的比较/"},{"title":"Swift中快速简单的工厂设计模式","url":"/Swift中快速简单的工厂设计模式/"},{"title":"Swift中的UITableView教程","url":"/Swift中的UITableView教程/"},{"title":"Swift中的懒加载模式","url":"/Swift中的懒加载模式/"},{"title":"Swift中的模块和挂钩","url":"/Swift中的模块和挂钩/"},{"title":"Swift使用布局锚点添加约束","url":"/Swift使用布局锚点添加约束/"},{"title":"Swift依赖注入设计模式","url":"/Swift依赖注入设计模式/"},{"title":"Swift初始化模式","url":"/Swift初始化模式/"},{"title":"Swift关于Dependency Injection (DI)","url":"/Swift关于Dependency Injection (DI)/"},{"title":"Swift单例模式","url":"/Swift单例模式/"},{"title":"Swift命令设计模式","url":"/Swift命令设计模式/"},{"title":"Swift原型设计模式","url":"/Swift原型设计模式/"},{"title":"Swift外观设计模式","url":"/Swift外观设计模式/"},{"title":"Swift委托设计模式","url":"/Swift委托设计模式/"},{"title":"Swift对象池设计模式","url":"/Swift对象池设计模式/"},{"title":"Swift工厂方法设计模式","url":"/Swift工厂方法设计模式/"},{"title":"Swift抽象工厂设计模式","url":"/Swift抽象工厂设计模式/"},{"title":"Swift带闭包的懒惰初始化","url":"/Swift带闭包的懒惰初始化/"},{"title":"Swift掌握iOS自动布局锚点","url":"/Swift掌握iOS自动布局锚点/"},{"title":"Swift生成器模式","url":"/Swift生成器模式/"},{"title":"Swift支持旋转的自适应单元格","url":"/Swift支持旋转的自适应单元格/"},{"title":"Swift枚举值","url":"/Swift枚举值/"},{"title":"Swift编写的20个iOS库(一)","url":"/Swift编写的20个iOS库(一)/"},{"title":"Swift结合Xib文件自定义UIView","url":"/Swift结合Xib文件自定义UIView/"},{"title":"Swift迭代器设计模式","url":"/Swift迭代器设计模式/"},{"title":"Swift适配器设计模式","url":"/Swift适配器设计模式/"},{"title":"UICollectionView Cells：圆形图像、支持旋转","url":"/UICollectionView Cells：圆形图像、支持旋转/"},{"title":"Swift静态工厂设计模式","url":"/Swift静态工厂设计模式/"},{"title":"UIKit初始化模式","url":"/UIKit初始化模式/"},{"title":"UICollectionView data source and delegates","url":"/UICollectionView data source and delegates/"},{"title":"Ubuntu18.04替换国内源","url":"/Ubuntu18.04替换国内源/"},{"title":"VIPER体系结构：我们的最佳实践，像老板一样构建应用程序","url":"/VIPER体系结构：我们的最佳实践，像老板一样构建应用程序/"},{"title":"appleOS的Networking示例","url":"/appleOS的Networking示例/"},{"title":"Xcode扩展","url":"/Xcode扩展/"},{"title":"iOS VIPER架构深入实践","url":"/iOS VIPER架构深入实践/"},{"title":"iOS 自定义视图，输入表单和错误提示","url":"/iOS 自定义视图，输入表单和错误提示/"},{"title":"iOS如何使用iCloud文档？","url":"/iOS如何使用iCloud文档？/"},{"title":"iOS子类化样式","url":"/iOS子类化样式/"},{"title":"iOS自动化布局编程","url":"/iOS自动化布局编程/"},{"title":"iOS自定义转场(By Swift)","url":"/iOS自定义转场(By Swift)/"},{"title":"iOS项目架构：使用VIPER","url":"/iOS项目架构：使用VIPER/"},{"title":"为iOS应用构建输入表单","url":"/为iOS应用构建输入表单/"},{"title":"产品开发的幕后花絮","url":"/产品开发的幕后花絮/"},{"title":"作为Swift开发人员，如何提供更好的用户体验？","url":"/作为Swift开发人员，如何提供更好的用户体验？/"},{"title":"后端实践一:开发环境搭建VMware下安装Ubuntu18.04","url":"/后端实践一:开发环境搭建VMware下安装Ubuntu18.04/"},{"title":"后端实践三:Ubuntu18.04安装Vapor4.0","url":"/后端实践三:Ubuntu18.04安装Vapor4.0/"},{"title":"后端实践二:Ubuntu18.04安装最新版Swift5.2","url":"/后端实践二:Ubuntu18.04安装最新版Swift5.2/"},{"title":"在2020年学习iOS / Swift的最佳实践是什么？","url":"/在2020年学习iOS / Swift的最佳实践是什么？/"},{"title":"在Swift中处理非可选选项","url":"/在Swift中处理非可选选项/"},{"title":"在Swift中创建自定义集合","url":"/在Swift中创建自定义集合/"},{"title":"在Swift中生成随机数","url":"/在Swift中生成随机数/"},{"title":"在Swift中重构单例模式用法","url":"/在Swift中重构单例模式用法/"},{"title":"如何为VIPER编写服务？","url":"/如何为VIPER编写服务？/"},{"title":"如何使用 Result Type来处理Swift 5中的Errors？","url":"/如何使用 Result Type来处理Swift 5中的Errors？/"},{"title":"如何使用Codable protocol在Swift中解析JSON？","url":"/如何使用Codable protocol在Swift中解析JSON？/"},{"title":"如何使用 Combine Publishers和Subscribers通过URLSession下载文件？","url":"/如何使用 Combine Publishers和Subscribers通过URLSession下载文件？/"},{"title":"如何使用VIPER构建SwiftUI Apps？","url":"/如何使用VIPER构建SwiftUI Apps？/"},{"title":"掌握VIPER架构","url":"/掌握VIPER架构/"},{"title":"揭秘 WordPress Hook 系统","url":"/揭秘 WordPress Hook 系统/"},{"title":"比较工厂设计模式","url":"/比较工厂设计模式/"},{"title":"深入了解Swift中的Grand Central Dispatch","url":"/深入了解Swift中的Grand Central Dispatch/"},{"title":"深入研究Swift框架","url":"/深入研究Swift框架/"},{"title":"适用于iOS开发人员的VIPER最佳实践","url":"/适用于iOS开发人员的VIPER最佳实践/"},{"title":"选择Swift而不是Objective-C的5个理由","url":"/选择Swift而不是Objective-C的5个理由/"},{"title":"Advanced Swift系列(七): Strings","url":"/Advanced Swift系列(七): Strings/"},{"title":"Advanced Swift系列(十): Collection Protocols","url":"/Advanced Swift系列(十): Collection Protocols/"},{"title":"Advanced Swift系列(六):  Enums","url":"/Advanced Swift系列(六):  Enums/"},{"title":"Advanced Swift系列(四):  Functions","url":"/Advanced Swift系列(四):  Functions/"}]
[{"title":"Hello World","url":"/hello-world/"},{"title":"NSCODER和SWIFT初始化","url":"/NSCODER和SWIFT初始化/"},{"title":"Swift依赖注入设计模式","url":"/Swift依赖注入设计模式/"},{"title":"Swift中快速简单的工厂设计模式","url":"/Swift中快速简单的工厂设计模式/"},{"title":"Swift中构造函数与静态工厂方法的比较","url":"/Swift中构造函数与静态工厂方法的比较/"},{"title":"Swift单例模式","url":"/Swift单例模式/"},{"title":"Swift关于Dependency Injection (DI)","url":"/Swift关于Dependency Injection (DI)/"},{"title":"Swift命令设计模式","url":"/Swift命令设计模式/"},{"title":"Swift原型设计模式","url":"/Swift原型设计模式/"},{"title":"Swift委托设计模式","url":"/Swift委托设计模式/"},{"title":"Swift生成器模式","url":"/Swift生成器模式/"},{"title":"Swift工厂方法设计模式","url":"/Swift工厂方法设计模式/"},{"title":"Swift抽象工厂设计模式","url":"/Swift抽象工厂设计模式/"},{"title":"UIKit初始化模式","url":"/UIKit初始化模式/"},{"title":"Swift静态工厂设计模式","url":"/Swift静态工厂设计模式/"},{"title":"后端实践一:开发环境搭建VMware下安装Ubuntu18.04","url":"/后端实践一:开发环境搭建VMware下安装Ubuntu18.04/"},{"title":"Ubuntu18.04替换国内源","url":"/Ubuntu18.04替换国内源/"},{"title":"后端实践二:Ubuntu18.04安装最新版Swift5.2","url":"/后端实践二:Ubuntu18.04安装最新版Swift5.2/"},{"title":"后端实践三:Ubuntu18.04安装Vapor4.0","url":"/后端实践三:Ubuntu18.04安装Vapor4.0/"},{"title":"在Swift中重构单例模式用法","url":"/在Swift中重构单例模式用法/"},{"title":"比较工厂设计模式","url":"/比较工厂设计模式/"}]